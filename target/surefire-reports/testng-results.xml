<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="9" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="用户管理系统测试套件" duration-ms="2570" started-at="2020-03-04T17:02:15 CST" finished-at="2020-03-04T17:02:18 CST">
    <groups>
      <group name="login">
        <method signature="Login.test01()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test01" class="com.api.cases.Login"/>
        <method signature="Login.test02()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test02" class="com.api.cases.Login"/>
        <method signature="Login.test03()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test03" class="com.api.cases.Login"/>
        <method signature="Login.test04()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test04" class="com.api.cases.Login"/>
        <method signature="Login.test05()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test05" class="com.api.cases.Login"/>
        <method signature="Login.test06()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test06" class="com.api.cases.Login"/>
        <method signature="Login.test07()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test07" class="com.api.cases.Login"/>
        <method signature="Login.test08()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test08" class="com.api.cases.Login"/>
        <method signature="Login.test09()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test09" class="com.api.cases.Login"/>
      </group> <!-- login -->
    </groups>
    <test name="用户管理系统测试用例" duration-ms="2570" started-at="2020-03-04T17:02:15 CST" finished-at="2020-03-04T17:02:18 CST">
      <class name="com.api.cases.Login">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="setUp" is-config="true" duration-ms="12" started-at="2020-03-04T17:02:15 CST" description="初始化数据" finished-at="2020-03-04T17:02:15 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="test01()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test01" duration-ms="1193" started-at="2020-03-04T17:02:15 CST" description="用户名密码正确 登陆成功" finished-at="2020-03-04T17:02:16 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01 -->
        <test-method status="PASS" signature="test02()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test02" duration-ms="188" started-at="2020-03-04T17:02:16 CST" description="登陆失败 密码错误" finished-at="2020-03-04T17:02:16 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02 -->
        <test-method status="PASS" signature="test03()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test03" duration-ms="165" started-at="2020-03-04T17:02:16 CST" description="登陆失败 用户不存在" finished-at="2020-03-04T17:02:17 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03 -->
        <test-method status="PASS" signature="test04()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test04" duration-ms="172" started-at="2020-03-04T17:02:17 CST" description="用户名只有1个字符" finished-at="2020-03-04T17:02:17 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04 -->
        <test-method status="PASS" signature="test05()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test05" duration-ms="131" started-at="2020-03-04T17:02:17 CST" description="用户名含有20个字符" finished-at="2020-03-04T17:02:17 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test05 -->
        <test-method status="PASS" signature="test06()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test06" duration-ms="182" started-at="2020-03-04T17:02:17 CST" description="用户名为中文" finished-at="2020-03-04T17:02:17 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test06 -->
        <test-method status="PASS" signature="test07()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test07" duration-ms="207" started-at="2020-03-04T17:02:17 CST" description="用户名为数字" finished-at="2020-03-04T17:02:17 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test07 -->
        <test-method status="PASS" signature="test08()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test08" duration-ms="190" started-at="2020-03-04T17:02:17 CST" description="用户名为特殊字符" finished-at="2020-03-04T17:02:17 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test08 -->
        <test-method status="FAIL" signature="test09()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="test09" duration-ms="89" started-at="2020-03-04T17:02:17 CST" description="用户名中间有空格" finished-at="2020-03-04T17:02:18 CST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.api.cases.Login.run(Login.java:96)
at com.api.cases.Login.test09(Login.java:81)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test09 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.api.cases.Login@36d4b5c]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-03-04T17:02:18 CST" finished-at="2020-03-04T17:02:18 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.api.cases.Login -->
    </test> <!-- 用户管理系统测试用例 -->
  </suite> <!-- 用户管理系统测试套件 -->
</testng-results>
